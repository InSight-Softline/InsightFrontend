image: node:20 

stages:          
  - test
  - build
  - release
  - deploy

.setup:npm:
  cache: # https://docs.gitlab.com/ee/ci/caching/#cache-nodejs-dependencies
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/
  before_script:
    - cd frontend
    - npm ci --cache .npm --prefer-offline
    - cd -

# TESTING STAGE
# e2e-test-job:   
#   stage: test    
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - echo "Code coverage is 90%"

# integration-test-job:
#   image: node:20 
#   stage: test
#   script:
#     - echo "[*] Starting Integration Test...."
#     - echo "[*] Integration Test coverage is 100%"

# lint-test-job:  
#   image: node:20 
#   stage: test    
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - echo "No lint issues found."

# BUILD STAGE
frontend-build-job:       
  image: node:20 
  stage: build
  environment: production
  extends:
    - "setup:npm"
  #rules:
  #  - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building the application..."
    - cd frontend
    - npm run build
    - echo "Building complete! :)"
  artifacts:
    paths:
      - frontend/dist/

#RELEASE STAGE
docker-release-job:
  image: docker:20
  stage: release
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - frontend-build-job
  #rules:
  #  - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building & Deploying Docker Image...."
    - docker logout
    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin # Authenticate against the GitLab container registry
    - cd frontend
    - docker build -t gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend .
    - docker push gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend    
    - echo "[*] Image Build & Deployment was executed."

#DEPLOYMENT STAGE 
publish-job:      
  stage: deploy
  environment: 
    name: production
  tags:
    - prod
  #rules:
  #  - if: $CI_COMMIT_REF_NAME == "main"
  before_script:
    - podman logout --all || true
    - echo -n "${CI_REGISTRY_PASSWORD}" | podman login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - podman-compose -f frontend/docker-compose.yml pull
    - podman-compose -f frontend/docker-compose.yml up -d
