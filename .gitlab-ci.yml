image: node:20 

stages:          
  - test
  - build
  - release
  - deploy

.setup:npm:
  cache: # https://docs.gitlab.com/ee/ci/caching/#cache-nodejs-dependencies
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/
  before_script:
    - cd frontend
    - npm ci --cache .npm --prefer-offline
    - cd -

test-e2e:
  stage: test
  image: cypress/base:latest
  extends:
    - ".setup:npm"
  script:
    - cd frontend
    - npx cypress install
    - echo "Running Cypress e2e tests..."
    - npm run dev &                             # Start the server in the background
    - sleep 20                                  # Wait for the server to start (adjust time as needed)
    - npx cypress run                           # Run Cypress end-to-end tests
    - echo "Cypress e2e tests completed"
  artifacts:
    paths:
      - frontend/cypress/screenshots/
      - frontend/cypress/videos/
    expire_in: 1 week


#test-integration:
 # stage: test
  #extends:
    #- .setupCypress
 # script:
   # - echo "Running integration tests..."
   # - npm run dev &                          # Start the server in the background
   # - sleep 20                               # Wait for the server to start (adjust time as needed)
   # - npm run integration-test               # Run integration tests
   # - echo "Integration tests completed"
  #artifacts:
  #  paths:
      #- cypress/screenshots/
      #- cypress/videos/
    #expire_in: 1 week

test-lint:
  stage: test
  extends:
    - ".setup:npm"
  script:
    - echo "Running linting..."
    #- pwd                                        # use for debugging
    #- ls                                         # use for debugging
    - npm run lint                                # Run ESLint for linting
    - echo "Linting completed"



# BUILD STAGE
frontend-build-job:       
  image: node:20 
  stage: build
  environment: production
  extends:
    - ".setup:npm"
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building the application..."
    - cd frontend
    - npm run build -- --mode=production
    - echo "Building complete!"
  artifacts:
    paths:
      - frontend/dist/

# BUILD STAGE
frontend-build-job-fullstack:
  image: node:20
  stage: build
  environment: production
  extends:
    - ".setup:npm"
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building the application..."
    - cd frontend
    - npm run build -- --mode=fullstack
    - echo "Building complete!"
  artifacts:
    paths:
      - frontend/dist-fullstack/

#RELEASE STAGE
docker-release-job:
  image: docker:20
  stage: release
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - frontend-build-job
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building & Deploying Docker Image...."
    - docker logout
    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin # Authenticate against the GitLab container registry
    - cd frontend
    - docker build -t gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend:latest .
    - docker push gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend:latest
    - echo "[*] Image Build & Deployment was executed."

#RELEASE STAGE
docker-release-job-fullstack:
  image: docker:20
  stage: release
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - frontend-build-job-fullstack
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building & Deploying Docker Image...."
    - docker logout
    - echo -n "${CI_DEPLOY_PASSWORD}" | docker login $CI_REGISTRY -u $CI_DEPLOY_USER --password-stdin # Authenticate against the GitLab container registry
    - cd frontend
    - docker build -t gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend:fullstack .
    - docker push gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend:fullstack
    - echo "[*] Image Build & Deployment was executed."


#DEPLOYMENT STAGE 
publish-job:
  stage: deploy
  environment: 
    name: production
  tags:
    - prod
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
  before_script:
    - podman logout --all || true
    - echo -n "${CI_REGISTRY_PASSWORD}" | podman login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - podman-compose -f frontend/docker-compose.yml pull
    - podman-compose -f frontend/docker-compose.yml down
    - podman-compose -f frontend/docker-compose.yml up -d
