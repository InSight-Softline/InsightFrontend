image: node:20 

stages:          
  - test
  - build
  - release
  - deploy


# TESTING STAGE
e2e-test-job:   
  stage: test    
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - echo "Code coverage is 90%"

integration-test-job:
  image: node:20 
  stage: test
  script:
    - echo "[*] Starting Integration Test...."
    - echo "[*] Integration Test coverage is 100%"

lint-test-job:  
  image: node:20 
  stage: test    
  script:
    - echo "Linting code... This will take about 10 seconds."
    - echo "No lint issues found."

# BUILD STAGE
frontend-build-job:       
  image: node:20 
  stage: build
  environment: production
  #rules:
  # - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building the application..."
    - cd frontend
    - npm cache clean --force
    - npm ci    
    - npm run build
    - echo "Building complete! :)"
  artifacts:
    paths:
      - frontend/dist/

#RELEASE STAGE
docker-release-job:
  image: docker:20
  stage: release
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - frontend-build-job
  #rules:
  # - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building & Deploying Docker Image...."
    - docker logout
    - echo -n "${CI_DEPLOY_PASSWORD}" | docker login $CI_REGISTRY -u $CI_DEPLOY_USER --password-stdin # Authenticate against the GitLab container registry
    - cd frontend
    - docker build -t gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend .
    - docker push gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend    
    - echo "[*] Image Build & Deployment was executed."

#DEPLOYMENT STAGE 
publish-job:      
  image: ubuntu:24
  stage: deploy
  variables:
    DOCKER_IMAGE: gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/frontend:latest
    REMOTE_HOST: 141.57.8.208
    REMOTE_DOMAIN: https://sp08.imn.htwk-leipzig.de
    REMOTE_USERNAME: stud-fim  
  environment: 
    name: production
  #rules:
  # - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "hello world"
    - mkdir ./.ssh && touch ./.ssh/id_rsa 
    - echo $PRIVATE_KEY > ./.ssh/id_rsa
    - chmod 600 ./.ssh/id_rsa
    - ssh $REMOTE_USERNAME@$REMOTE_HOST ; echo -n "${CI_DEPLOY_PASSWORD}" | podman login $CI_REGISTRY -u $CI_DEPLOY_USER --password-stdin; podman pull $DOCKER_IMAGE; podman stop insight || true; podman rm insight || true; podman run -d --name insight -p 80:80 $DOCKER_IMAGE